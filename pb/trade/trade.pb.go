// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: trade.proto

package trade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	OrderSide_UNKNOW_SIDE OrderSide = 0
	OrderSide_BUY         OrderSide = 1
	OrderSide_SELL        OrderSide = 2
	OrderSide_SHORT_SELL  OrderSide = 3
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "UNKNOW_SIDE",
		1: "BUY",
		2: "SELL",
		3: "SHORT_SELL",
	}
	OrderSide_value = map[string]int32{
		"UNKNOW_SIDE": 0,
		"BUY":         1,
		"SELL":        2,
		"SHORT_SELL":  3,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_trade_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

type OrderStatus int32

const (
	OrderStatus_UNKNOW_ORDER_STATUS OrderStatus = 0
	OrderStatus_Init                OrderStatus = 1
	OrderStatus_New                 OrderStatus = 2
	OrderStatus_PartiallyFilled     OrderStatus = 3
	OrderStatus_Filled              OrderStatus = 4
	OrderStatus_Canceled            OrderStatus = 5
	OrderStatus_Rejected            OrderStatus = 6
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "UNKNOW_ORDER_STATUS",
		1: "Init",
		2: "New",
		3: "PartiallyFilled",
		4: "Filled",
		5: "Canceled",
		6: "Rejected",
	}
	OrderStatus_value = map[string]int32{
		"UNKNOW_ORDER_STATUS": 0,
		"Init":                1,
		"New":                 2,
		"PartiallyFilled":     3,
		"Filled":              4,
		"Canceled":            5,
		"Rejected":            6,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_proto_enumTypes[1].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_trade_proto_enumTypes[1]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{1}
}

type OrdType int32

const (
	OrdType_UNKNOW_ORDTYPE OrdType = 0
	OrdType_Market         OrdType = 1
	OrdType_Limit          OrdType = 2
	OrdType_Stop           OrdType = 3
)

// Enum value maps for OrdType.
var (
	OrdType_name = map[int32]string{
		0: "UNKNOW_ORDTYPE",
		1: "Market",
		2: "Limit",
		3: "Stop",
	}
	OrdType_value = map[string]int32{
		"UNKNOW_ORDTYPE": 0,
		"Market":         1,
		"Limit":          2,
		"Stop":           3,
	}
)

func (x OrdType) Enum() *OrdType {
	p := new(OrdType)
	*p = x
	return p
}

func (x OrdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrdType) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_proto_enumTypes[2].Descriptor()
}

func (OrdType) Type() protoreflect.EnumType {
	return &file_trade_proto_enumTypes[2]
}

func (x OrdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrdType.Descriptor instead.
func (OrdType) EnumDescriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{2}
}

type TimeInForce int32

const (
	TimeInForce_UNKNOW_TIF TimeInForce = 0
	TimeInForce_GFD        TimeInForce = 1
	TimeInForce_GTC        TimeInForce = 2
	TimeInForce_IOC        TimeInForce = 3
	TimeInForce_FOK        TimeInForce = 4
	TimeInForce_GTX        TimeInForce = 5
	TimeInForce_GTD        TimeInForce = 6
)

// Enum value maps for TimeInForce.
var (
	TimeInForce_name = map[int32]string{
		0: "UNKNOW_TIF",
		1: "GFD",
		2: "GTC",
		3: "IOC",
		4: "FOK",
		5: "GTX",
		6: "GTD",
	}
	TimeInForce_value = map[string]int32{
		"UNKNOW_TIF": 0,
		"GFD":        1,
		"GTC":        2,
		"IOC":        3,
		"FOK":        4,
		"GTX":        5,
		"GTD":        6,
	}
)

func (x TimeInForce) Enum() *TimeInForce {
	p := new(TimeInForce)
	*p = x
	return p
}

func (x TimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_proto_enumTypes[3].Descriptor()
}

func (TimeInForce) Type() protoreflect.EnumType {
	return &file_trade_proto_enumTypes[3]
}

func (x TimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeInForce.Descriptor instead.
func (TimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{3}
}

type TradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infxid        int32                  `protobuf:"varint,1,opt,name=infxid,proto3" json:"infxid,omitempty"`
	Secid         int32                  `protobuf:"varint,2,opt,name=secid,proto3" json:"secid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	mi := &file_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

func (x *TradeRequest) GetInfxid() int32 {
	if x != nil {
		return x.Infxid
	}
	return 0
}

func (x *TradeRequest) GetSecid() int32 {
	if x != nil {
		return x.Secid
	}
	return 0
}

type TradeResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Infxid         int32                  `protobuf:"varint,1,opt,name=infxid,proto3" json:"infxid,omitempty"`
	Secid          int32                  `protobuf:"varint,2,opt,name=secid,proto3" json:"secid,omitempty"`
	Symbol         string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Tradeid        string                 `protobuf:"bytes,4,opt,name=tradeid,proto3" json:"tradeid,omitempty"`
	Volume         int64                  `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Price          float64                `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Tradevolume    int64                  `protobuf:"varint,7,opt,name=tradevolume,proto3" json:"tradevolume,omitempty"`
	Tradeprice     float64                `protobuf:"fixed64,8,opt,name=tradeprice,proto3" json:"tradeprice,omitempty"`
	Filltime       int64                  `protobuf:"varint,9,opt,name=filltime,proto3" json:"filltime,omitempty"`
	Submissiontime int64                  `protobuf:"varint,10,opt,name=submissiontime,proto3" json:"submissiontime,omitempty"`
	Side           OrderSide              `protobuf:"varint,11,opt,name=side,proto3,enum=OrderSide" json:"side,omitempty"`
	Orderid        int32                  `protobuf:"varint,12,opt,name=orderid,proto3" json:"orderid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TradeResponse) Reset() {
	*x = TradeResponse{}
	mi := &file_trade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeResponse) ProtoMessage() {}

func (x *TradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeResponse.ProtoReflect.Descriptor instead.
func (*TradeResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{1}
}

func (x *TradeResponse) GetInfxid() int32 {
	if x != nil {
		return x.Infxid
	}
	return 0
}

func (x *TradeResponse) GetSecid() int32 {
	if x != nil {
		return x.Secid
	}
	return 0
}

func (x *TradeResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeResponse) GetTradeid() string {
	if x != nil {
		return x.Tradeid
	}
	return ""
}

func (x *TradeResponse) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TradeResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TradeResponse) GetTradevolume() int64 {
	if x != nil {
		return x.Tradevolume
	}
	return 0
}

func (x *TradeResponse) GetTradeprice() float64 {
	if x != nil {
		return x.Tradeprice
	}
	return 0
}

func (x *TradeResponse) GetFilltime() int64 {
	if x != nil {
		return x.Filltime
	}
	return 0
}

func (x *TradeResponse) GetSubmissiontime() int64 {
	if x != nil {
		return x.Submissiontime
	}
	return 0
}

func (x *TradeResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_UNKNOW_SIDE
}

func (x *TradeResponse) GetOrderid() int32 {
	if x != nil {
		return x.Orderid
	}
	return 0
}

type TradeListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trades        []*TradeResponse       `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeListResponse) Reset() {
	*x = TradeListResponse{}
	mi := &file_trade_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeListResponse) ProtoMessage() {}

func (x *TradeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeListResponse.ProtoReflect.Descriptor instead.
func (*TradeListResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{2}
}

func (x *TradeListResponse) GetTrades() []*TradeResponse {
	if x != nil {
		return x.Trades
	}
	return nil
}

type OrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infxid        int32                  `protobuf:"varint,1,opt,name=infxid,proto3" json:"infxid,omitempty"`
	Secid         int32                  `protobuf:"varint,2,opt,name=secid,proto3" json:"secid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	mi := &file_trade_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{3}
}

func (x *OrderRequest) GetInfxid() int32 {
	if x != nil {
		return x.Infxid
	}
	return 0
}

func (x *OrderRequest) GetSecid() int32 {
	if x != nil {
		return x.Secid
	}
	return 0
}

type OrderResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Infxid         int32                  `protobuf:"varint,1,opt,name=infxid,proto3" json:"infxid,omitempty"`
	Secid          int32                  `protobuf:"varint,2,opt,name=secid,proto3" json:"secid,omitempty"`
	Symbol         string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Orderid        string                 `protobuf:"bytes,4,opt,name=orderid,proto3" json:"orderid,omitempty"`
	Id             int32                  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Execid         string                 `protobuf:"bytes,6,opt,name=execid,proto3" json:"execid,omitempty"`
	Volume         int64                  `protobuf:"varint,7,opt,name=volume,proto3" json:"volume,omitempty"`
	Price          float64                `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	Avgpx          float64                `protobuf:"fixed64,9,opt,name=avgpx,proto3" json:"avgpx,omitempty"`
	Stopprice      float64                `protobuf:"fixed64,10,opt,name=stopprice,proto3" json:"stopprice,omitempty"`
	Cumqty         int64                  `protobuf:"varint,11,opt,name=cumqty,proto3" json:"cumqty,omitempty"`
	Submissiontime int64                  `protobuf:"varint,12,opt,name=submissiontime,proto3" json:"submissiontime,omitempty"`
	Acktime        int64                  `protobuf:"varint,13,opt,name=acktime,proto3" json:"acktime,omitempty"`
	Filltime       int64                  `protobuf:"varint,14,opt,name=filltime,proto3" json:"filltime,omitempty"`
	Side           OrderSide              `protobuf:"varint,15,opt,name=side,proto3,enum=OrderSide" json:"side,omitempty"`
	Status         OrderStatus            `protobuf:"varint,16,opt,name=status,proto3,enum=OrderStatus" json:"status,omitempty"`
	Ordertype      OrdType                `protobuf:"varint,17,opt,name=ordertype,proto3,enum=OrdType" json:"ordertype,omitempty"`
	Tif            TimeInForce            `protobuf:"varint,18,opt,name=tif,proto3,enum=TimeInForce" json:"tif,omitempty"`
	Broker         int32                  `protobuf:"varint,19,opt,name=broker,proto3" json:"broker,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	mi := &file_trade_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{4}
}

func (x *OrderResponse) GetInfxid() int32 {
	if x != nil {
		return x.Infxid
	}
	return 0
}

func (x *OrderResponse) GetSecid() int32 {
	if x != nil {
		return x.Secid
	}
	return 0
}

func (x *OrderResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderResponse) GetOrderid() string {
	if x != nil {
		return x.Orderid
	}
	return ""
}

func (x *OrderResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderResponse) GetExecid() string {
	if x != nil {
		return x.Execid
	}
	return ""
}

func (x *OrderResponse) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OrderResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderResponse) GetAvgpx() float64 {
	if x != nil {
		return x.Avgpx
	}
	return 0
}

func (x *OrderResponse) GetStopprice() float64 {
	if x != nil {
		return x.Stopprice
	}
	return 0
}

func (x *OrderResponse) GetCumqty() int64 {
	if x != nil {
		return x.Cumqty
	}
	return 0
}

func (x *OrderResponse) GetSubmissiontime() int64 {
	if x != nil {
		return x.Submissiontime
	}
	return 0
}

func (x *OrderResponse) GetAcktime() int64 {
	if x != nil {
		return x.Acktime
	}
	return 0
}

func (x *OrderResponse) GetFilltime() int64 {
	if x != nil {
		return x.Filltime
	}
	return 0
}

func (x *OrderResponse) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_UNKNOW_SIDE
}

func (x *OrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_UNKNOW_ORDER_STATUS
}

func (x *OrderResponse) GetOrdertype() OrdType {
	if x != nil {
		return x.Ordertype
	}
	return OrdType_UNKNOW_ORDTYPE
}

func (x *OrderResponse) GetTif() TimeInForce {
	if x != nil {
		return x.Tif
	}
	return TimeInForce_UNKNOW_TIF
}

func (x *OrderResponse) GetBroker() int32 {
	if x != nil {
		return x.Broker
	}
	return 0
}

type OrderListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*OrderResponse       `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderListResponse) Reset() {
	*x = OrderListResponse{}
	mi := &file_trade_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListResponse) ProtoMessage() {}

func (x *OrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListResponse.ProtoReflect.Descriptor instead.
func (*OrderListResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{5}
}

func (x *OrderListResponse) GetOrders() []*OrderResponse {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_trade_proto protoreflect.FileDescriptor

const file_trade_proto_rawDesc = "" +
	"\n" +
	"\vtrade.proto\"<\n" +
	"\fTradeRequest\x12\x16\n" +
	"\x06infxid\x18\x01 \x01(\x05R\x06infxid\x12\x14\n" +
	"\x05secid\x18\x02 \x01(\x05R\x05secid\"\xdd\x02\n" +
	"\rTradeResponse\x12\x16\n" +
	"\x06infxid\x18\x01 \x01(\x05R\x06infxid\x12\x14\n" +
	"\x05secid\x18\x02 \x01(\x05R\x05secid\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x18\n" +
	"\atradeid\x18\x04 \x01(\tR\atradeid\x12\x16\n" +
	"\x06volume\x18\x05 \x01(\x03R\x06volume\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x01R\x05price\x12 \n" +
	"\vtradevolume\x18\a \x01(\x03R\vtradevolume\x12\x1e\n" +
	"\n" +
	"tradeprice\x18\b \x01(\x01R\n" +
	"tradeprice\x12\x1a\n" +
	"\bfilltime\x18\t \x01(\x03R\bfilltime\x12&\n" +
	"\x0esubmissiontime\x18\n" +
	" \x01(\x03R\x0esubmissiontime\x12\x1e\n" +
	"\x04side\x18\v \x01(\x0e2\n" +
	".OrderSideR\x04side\x12\x18\n" +
	"\aorderid\x18\f \x01(\x05R\aorderid\";\n" +
	"\x11TradeListResponse\x12&\n" +
	"\x06trades\x18\x01 \x03(\v2\x0e.TradeResponseR\x06trades\"<\n" +
	"\fOrderRequest\x12\x16\n" +
	"\x06infxid\x18\x01 \x01(\x05R\x06infxid\x12\x14\n" +
	"\x05secid\x18\x02 \x01(\x05R\x05secid\"\x95\x04\n" +
	"\rOrderResponse\x12\x16\n" +
	"\x06infxid\x18\x01 \x01(\x05R\x06infxid\x12\x14\n" +
	"\x05secid\x18\x02 \x01(\x05R\x05secid\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x18\n" +
	"\aorderid\x18\x04 \x01(\tR\aorderid\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\x05R\x02id\x12\x16\n" +
	"\x06execid\x18\x06 \x01(\tR\x06execid\x12\x16\n" +
	"\x06volume\x18\a \x01(\x03R\x06volume\x12\x14\n" +
	"\x05price\x18\b \x01(\x01R\x05price\x12\x14\n" +
	"\x05avgpx\x18\t \x01(\x01R\x05avgpx\x12\x1c\n" +
	"\tstopprice\x18\n" +
	" \x01(\x01R\tstopprice\x12\x16\n" +
	"\x06cumqty\x18\v \x01(\x03R\x06cumqty\x12&\n" +
	"\x0esubmissiontime\x18\f \x01(\x03R\x0esubmissiontime\x12\x18\n" +
	"\aacktime\x18\r \x01(\x03R\aacktime\x12\x1a\n" +
	"\bfilltime\x18\x0e \x01(\x03R\bfilltime\x12\x1e\n" +
	"\x04side\x18\x0f \x01(\x0e2\n" +
	".OrderSideR\x04side\x12$\n" +
	"\x06status\x18\x10 \x01(\x0e2\f.OrderStatusR\x06status\x12&\n" +
	"\tordertype\x18\x11 \x01(\x0e2\b.OrdTypeR\tordertype\x12\x1e\n" +
	"\x03tif\x18\x12 \x01(\x0e2\f.TimeInForceR\x03tif\x12\x16\n" +
	"\x06broker\x18\x13 \x01(\x05R\x06broker\";\n" +
	"\x11OrderListResponse\x12&\n" +
	"\x06orders\x18\x01 \x03(\v2\x0e.OrderResponseR\x06orders*?\n" +
	"\tOrderSide\x12\x0f\n" +
	"\vUNKNOW_SIDE\x10\x00\x12\a\n" +
	"\x03BUY\x10\x01\x12\b\n" +
	"\x04SELL\x10\x02\x12\x0e\n" +
	"\n" +
	"SHORT_SELL\x10\x03*v\n" +
	"\vOrderStatus\x12\x17\n" +
	"\x13UNKNOW_ORDER_STATUS\x10\x00\x12\b\n" +
	"\x04Init\x10\x01\x12\a\n" +
	"\x03New\x10\x02\x12\x13\n" +
	"\x0fPartiallyFilled\x10\x03\x12\n" +
	"\n" +
	"\x06Filled\x10\x04\x12\f\n" +
	"\bCanceled\x10\x05\x12\f\n" +
	"\bRejected\x10\x06*>\n" +
	"\aOrdType\x12\x12\n" +
	"\x0eUNKNOW_ORDTYPE\x10\x00\x12\n" +
	"\n" +
	"\x06Market\x10\x01\x12\t\n" +
	"\x05Limit\x10\x02\x12\b\n" +
	"\x04Stop\x10\x03*S\n" +
	"\vTimeInForce\x12\x0e\n" +
	"\n" +
	"UNKNOW_TIF\x10\x00\x12\a\n" +
	"\x03GFD\x10\x01\x12\a\n" +
	"\x03GTC\x10\x02\x12\a\n" +
	"\x03IOC\x10\x03\x12\a\n" +
	"\x03FOK\x10\x04\x12\a\n" +
	"\x03GTX\x10\x05\x12\a\n" +
	"\x03GTD\x10\x062l\n" +
	"\fTradeService\x12-\n" +
	"\bGetTrade\x12\r.TradeRequest\x1a\x12.TradeListResponse\x12-\n" +
	"\bGetOrder\x12\r.OrderRequest\x1a\x12.OrderListResponseB\tZ\a./tradeb\x06proto3"

var (
	file_trade_proto_rawDescOnce sync.Once
	file_trade_proto_rawDescData []byte
)

func file_trade_proto_rawDescGZIP() []byte {
	file_trade_proto_rawDescOnce.Do(func() {
		file_trade_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trade_proto_rawDesc), len(file_trade_proto_rawDesc)))
	})
	return file_trade_proto_rawDescData
}

var file_trade_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_trade_proto_goTypes = []any{
	(OrderSide)(0),            // 0: OrderSide
	(OrderStatus)(0),          // 1: OrderStatus
	(OrdType)(0),              // 2: OrdType
	(TimeInForce)(0),          // 3: TimeInForce
	(*TradeRequest)(nil),      // 4: TradeRequest
	(*TradeResponse)(nil),     // 5: TradeResponse
	(*TradeListResponse)(nil), // 6: TradeListResponse
	(*OrderRequest)(nil),      // 7: OrderRequest
	(*OrderResponse)(nil),     // 8: OrderResponse
	(*OrderListResponse)(nil), // 9: OrderListResponse
}
var file_trade_proto_depIdxs = []int32{
	0, // 0: TradeResponse.side:type_name -> OrderSide
	5, // 1: TradeListResponse.trades:type_name -> TradeResponse
	0, // 2: OrderResponse.side:type_name -> OrderSide
	1, // 3: OrderResponse.status:type_name -> OrderStatus
	2, // 4: OrderResponse.ordertype:type_name -> OrdType
	3, // 5: OrderResponse.tif:type_name -> TimeInForce
	8, // 6: OrderListResponse.orders:type_name -> OrderResponse
	4, // 7: TradeService.GetTrade:input_type -> TradeRequest
	7, // 8: TradeService.GetOrder:input_type -> OrderRequest
	6, // 9: TradeService.GetTrade:output_type -> TradeListResponse
	9, // 10: TradeService.GetOrder:output_type -> OrderListResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_trade_proto_init() }
func file_trade_proto_init() {
	if File_trade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trade_proto_rawDesc), len(file_trade_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trade_proto_goTypes,
		DependencyIndexes: file_trade_proto_depIdxs,
		EnumInfos:         file_trade_proto_enumTypes,
		MessageInfos:      file_trade_proto_msgTypes,
	}.Build()
	File_trade_proto = out.File
	file_trade_proto_goTypes = nil
	file_trade_proto_depIdxs = nil
}
